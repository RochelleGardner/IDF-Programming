; Listing generated by Microsoft (R) Optimizing Compiler Version 19.12.25835.0 

	TITLE	C:\Users\DOTlaptop\Desktop\Class\Chapter 3\demoLab3a.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
$SG7336	DB	'%d ', 0aH, 00H
	ORG $+3
$SG7337	DB	'%f ', 0aH, 00H
	ORG $+3
$SG7338	DB	'%c ', 0aH, 00H
	ORG $+3
$SG7339	DB	'%d ', 0aH, 00H
_DATA	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	__vfprintf_l
PUBLIC	_printf
PUBLIC	_main
PUBLIC	__real@3f800000
PUBLIC	__real@40000000
PUBLIC	__real@40400000
PUBLIC	__real@40800000
PUBLIC	__real@40a00000
EXTRN	___acrt_iob_func:PROC
EXTRN	___stdio_common_vfprintf:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	_memset:PROC
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
_DATA	SEGMENT
COMM	?_OptionsStorage@?1??__local_stdio_printf_options@@9@9:QWORD							; `__local_stdio_printf_options'::`2'::_OptionsStorage
_DATA	ENDS
;	COMDAT __real@40a00000
CONST	SEGMENT
__real@40a00000 DD 040a00000r			; 5
CONST	ENDS
;	COMDAT __real@40800000
CONST	SEGMENT
__real@40800000 DD 040800000r			; 4
CONST	ENDS
;	COMDAT __real@40400000
CONST	SEGMENT
__real@40400000 DD 040400000r			; 3
CONST	ENDS
;	COMDAT __real@40000000
CONST	SEGMENT
__real@40000000 DD 040000000r			; 2
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_myFloatArray$ = -320					; size = 20
_myIntArray$ = -300					; size = 40
_myCharArray$ = -260					; size = 256
__$ArrayPad$ = -4					; size = 4
_main	PROC
; File c:\users\dotlaptop\desktop\class\chapter 3\demolab3a.c
; Line 4
	push	ebp
	mov	ebp, esp
	sub	esp, 320				; 00000140H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 5
	mov	DWORD PTR _myIntArray$[ebp], 100	; 00000064H
	mov	DWORD PTR _myIntArray$[ebp+4], 100	; 00000064H
	mov	DWORD PTR _myIntArray$[ebp+8], 100	; 00000064H
	mov	DWORD PTR _myIntArray$[ebp+12], 100	; 00000064H
	mov	DWORD PTR _myIntArray$[ebp+16], 100	; 00000064H
	mov	DWORD PTR _myIntArray$[ebp+20], 100	; 00000064H
	mov	DWORD PTR _myIntArray$[ebp+24], 100	; 00000064H
	mov	DWORD PTR _myIntArray$[ebp+28], 100	; 00000064H
	mov	DWORD PTR _myIntArray$[ebp+32], 100	; 00000064H
	mov	DWORD PTR _myIntArray$[ebp+36], 100	; 00000064H
; Line 6
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _myFloatArray$[ebp], xmm0
	movss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR _myFloatArray$[ebp+4], xmm0
	movss	xmm0, DWORD PTR __real@40400000
	movss	DWORD PTR _myFloatArray$[ebp+8], xmm0
	movss	xmm0, DWORD PTR __real@40800000
	movss	DWORD PTR _myFloatArray$[ebp+12], xmm0
	movss	xmm0, DWORD PTR __real@40a00000
	movss	DWORD PTR _myFloatArray$[ebp+16], xmm0
; Line 7
	push	256					; 00000100H
	push	0
	lea	eax, DWORD PTR _myCharArray$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 13
	mov	ecx, 4
	shl	ecx, 1
	mov	edx, DWORD PTR _myIntArray$[ebp+ecx]
	push	edx
	push	OFFSET $SG7336
	call	_printf
	add	esp, 8
; Line 14
	mov	eax, 4
	shl	eax, 1
	cvtss2sd xmm0, DWORD PTR _myFloatArray$[ebp+eax]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET $SG7337
	call	_printf
	add	esp, 12					; 0000000cH
; Line 15
	mov	ecx, 1
	shl	ecx, 1
	movsx	edx, BYTE PTR _myCharArray$[ebp+ecx]
	push	edx
	push	OFFSET $SG7338
	call	_printf
	add	esp, 8
; Line 17
	mov	eax, 4
	imul	ecx, eax, 0
	mov	DWORD PTR _myIntArray$[ebp+ecx], 10	; 0000000aH
; Line 19
	lea	edx, DWORD PTR _myIntArray$[ebp]
	push	edx
	push	OFFSET $SG7339
	call	_printf
	add	esp, 8
; Line 21
	xor	eax, eax
; Line 22
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_main	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT _printf
_TEXT	SEGMENT
__Result$ = -8						; size = 4
__ArgList$ = -4						; size = 4
__Format$ = 8						; size = 4
_printf	PROC						; COMDAT
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\stdio.h
; Line 954
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 957
	lea	eax, DWORD PTR __Format$[ebp+4]
	mov	DWORD PTR __ArgList$[ebp], eax
; Line 958
	mov	ecx, DWORD PTR __ArgList$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR __Format$[ebp]
	push	edx
	push	1
	call	___acrt_iob_func
	add	esp, 4
	push	eax
	call	__vfprintf_l
	add	esp, 16					; 00000010H
	mov	DWORD PTR __Result$[ebp], eax
; Line 959
	mov	DWORD PTR __ArgList$[ebp], 0
; Line 960
	mov	eax, DWORD PTR __Result$[ebp]
; Line 961
	mov	esp, ebp
	pop	ebp
	ret	0
_printf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT __vfprintf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfprintf_l PROC					; COMDAT
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\stdio.h
; Line 642
	push	ebp
	mov	ebp, esp
; Line 643
	mov	eax, DWORD PTR __ArgList$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Locale$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Format$[ebp]
	push	edx
	mov	eax, DWORD PTR __Stream$[ebp]
	push	eax
	call	___local_stdio_printf_options
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	call	___stdio_common_vfprintf
	add	esp, 24					; 00000018H
; Line 644
	pop	ebp
	ret	0
__vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_stdio_config.h
; Line 85
	push	ebp
	mov	ebp, esp
; Line 87
	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@9 ; `__local_stdio_printf_options'::`2'::_OptionsStorage
; Line 88
	pop	ebp
	ret	0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
